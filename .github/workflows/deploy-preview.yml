---

name: Deploy PR Preview

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  deploy-preview:
    name: Deploy Preview Environment
    runs-on: ubuntu-latest
    if: github.event.pull_request.head.repo.full_name == github.repository
    
    permissions:
      contents: read
      id-token: write
      checks: write
      pull-requests: write

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          lfs: true

      - name: Checkout LFS
        run: git lfs checkout

      - name: Use Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '20.x'

      - name: Install npm
        run: npm ci

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version-file: "./go.mod"

      - name: Generate preview app.yaml
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          SERVICE_NAME="pr-${PR_NUMBER}"
          
          # Copy app.yaml from .appengine and append service name
          cp ./.appengine/app.yaml ./app.yaml
          echo "" >> ./app.yaml
          echo "service: ${SERVICE_NAME}" >> ./app.yaml

      - name: Auth
        uses: "google-github-actions/auth@v3"
        with:
          credentials_json: "${{ secrets.GOOGLE_CREDENTIALS }}"

      - name: Setup Cloud SDK
        uses: google-github-actions/setup-gcloud@v3

      - name: Deploy to Preview
        id: deploy
        uses: "google-github-actions/deploy-appengine@v3"
        with:
          project_id: "justindfuller"
          deliverables: "app.yaml"
          promote: true
          version: "pr-${{ github.event.pull_request.number }}-${{ github.run_id }}"

      - name: Update Dispatch Rules
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          SERVICE_NAME="pr-${PR_NUMBER}"
          
          # Create a dispatch.yaml with the preview route
          cat > dispatch.yaml << EOF
          ---
          dispatch:
            - url: "${SERVICE_NAME}-dot-justindfuller.uc.r.appspot.com/*"
              service: ${SERVICE_NAME}
          EOF
          
          # Deploy only the dispatch rules for this preview
          gcloud app deploy dispatch.yaml --project=justindfuller --quiet || true

      - name: Comment Preview URL
        uses: actions/github-script@v8
        with:
          script: |
            const pr_number = context.payload.pull_request.number;
            const service_name = `pr-${pr_number}`;
            const preview_url = `https://${service_name}-dot-justindfuller.uc.r.appspot.com`;
            
            // Find existing comment - use paginate to get ALL comments
            const comments = await github.paginate(github.rest.issues.listComments, {
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr_number,
              per_page: 100
            });
            
            const botComment = comments.find(comment => 
              comment.user.login === 'github-actions[bot]' && 
              comment.body.includes('ðŸš€ Preview Environment Deployed')
            );
            
            // Only create comment if it doesn't exist (first deployment)
            if (!botComment) {
              const comment_body = `## ðŸš€ Preview Environment Deployed!
              
              Your changes have been deployed to: ${preview_url}
              
              This preview will be automatically updated when you push new commits to this PR.
              The preview environment will be cleaned up when this PR is closed or merged.`;
              
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr_number,
                body: comment_body
              });
            }
            // If comment exists, don't update it - the preview is already deployed